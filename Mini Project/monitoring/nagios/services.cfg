# monitoring/nagios/services.cfg

# Define a host for the Flask ECS application
define host{
        use                     linux-server
        host_name               flask-ecs-app
        alias                   Flask ECS Application
        address                 flask-ecs-app-alb-123456789.us-east-1.elb.amazonaws.com
        check_command           check-host-alive
        max_check_attempts      3
        check_period            24x7
        notification_interval   60
        notification_period     24x7
        }

# Define a service to check the Flask app health endpoint
define service{
        use                     generic-service
        host_name               flask-ecs-app
        service_description     Flask App Health Check
        check_command           check_alb_health!flask-ecs-app-alb-123456789.us-east-1.elb.amazonaws.com
        max_check_attempts      3
        normal_check_interval   5
        retry_check_interval    1
        check_period            24x7
        notification_interval   60
        notification_period     24x7
        }

# Define a service to check HTTP response
define service{
        use                     generic-service
        host_name               flask-ecs-app
        service_description     HTTP Response
        check_command           check_http!80
        max_check_attempts      3
        normal_check_interval   5
        retry_check_interval    1
        check_period            24x7
        notification_interval   60
        notification_period     24x7
        }

# Define a service to check the main application endpoint
define service{
        use                     generic-service
        host_name               flask-ecs-app
        service_description     Flask App Main Endpoint
        check_command           check_http_string!80!/!Hello from Flask
        max_check_attempts      3
        normal_check_interval   5
        retry_check_interval    1
        check_period            24x7
        notification_interval   60
        notification_period     24x7
        }

# Define a service to check metrics endpoint
define service{
        use                     generic-service
        host_name               flask-ecs-app
        service_description     Flask App Metrics
        check_command           check_http_url!80!/metrics
        max_check_attempts      3
        normal_check_interval   10
        retry_check_interval    2
        check_period            24x7
        notification_interval   60
        notification_period     24x7
        }

# Define a contact group
define contactgroup{
        contactgroup_name       flask-app-admins
        alias                   Flask Application Administrators
        members                 nagiosadmin
        }

# Define a contact
define contact{
        contact_name                    nagiosadmin
        use                             generic-contact
        alias                           Nagios Admin
        email                           admin@company.com
        }

# Define generic service template
define service{
        name                            generic-service
        active_checks_enabled           1
        passive_checks_enabled          1
        parallelize_check               1
        obsess_over_service             1
        check_freshness                 0
        notifications_enabled           1
        event_handler_enabled           1
        flap_detection_enabled          1
        failure_prediction_enabled      1
        process_perf_data               1
        retain_status_information       1
        retain_nonstatus_information    1
        is_volatile                     0
        check_period                    24x7
        max_check_attempts              3
        normal_check_interval           10
        retry_check_interval            2
        contact_groups                  flask-app-admins
        notification_options            w,u,c,r
        notification_interval           60
        notification_period             24x7
        register                        0
        }